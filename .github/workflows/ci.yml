name: DBX Backend CI/CD

on:
  push:
    branches: [ main, new-branch-exchange-logic, develop ]
  pull_request:
    branches: [ main, new-branch-exchange-logic ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (if available)
      run: |
        if npm run lint --silent 2>/dev/null; then
          echo "✅ Running linting..."
          npm run lint
        else
          echo "ℹ️ No lint script found, skipping..."
        fi
      continue-on-error: true
      
    - name: Run tests (if available)
      run: |
        if npm run test --silent 2>/dev/null; then
          echo "✅ Running tests..."
          npm test
        else
          echo "ℹ️ No test script found, skipping..."
        fi
      continue-on-error: true
      
    - name: Check package vulnerabilities
      run: npm audit --audit-level=high
      continue-on-error: true

  migration-check:
    name: Migration Check
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: dbx_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U test_user; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        echo "✅ PostgreSQL is ready"
        
    - name: Test database connection
      run: |
        PGPASSWORD=test_password psql -h localhost -U test_user -d dbx_test -c "SELECT version();"
      
    - name: Run migrations
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: dbx_test
        DB_USER: test_user
        DB_PASSWORD: test_password
        DATABASE_URL: postgres://test_user:test_password@localhost:5432/dbx_test
      run: |
        echo "🚀 Running database migrations..."
        npx sequelize-cli db:migrate
        echo "✅ Migrations completed successfully"
        
    - name: Verify migration status
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: dbx_test
        DB_USER: test_user
        DB_PASSWORD: test_password
        DATABASE_URL: postgres://test_user:test_password@localhost:5432/dbx_test
      run: |
        echo "🔍 Checking migration status..."
        npx sequelize-cli db:migrate:status
        echo "✅ Migration status check completed"

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        echo "🔒 Running security audit..."
        npm audit --audit-level=moderate
        echo "✅ Security audit completed"
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: |
        echo "🔍 Checking for known vulnerabilities..."
        npx audit-ci --moderate
        echo "✅ Vulnerability check completed"
      continue-on-error: true

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check build script
      run: |
        if npm run build --silent 2>/dev/null; then
          echo "✅ Running build..."
          npm run build
        else
          echo "ℹ️ No build script found, checking basic syntax..."
          node -c server.js
          echo "✅ Syntax check passed"
        fi
        
    - name: Verify required files
      run: |
        echo "📁 Checking required files..."
        test -f server.js && echo "✅ server.js exists"
        test -f package.json && echo "✅ package.json exists"
        test -d models && echo "✅ models directory exists"
        test -d migrations && echo "✅ migrations directory exists"
        echo "✅ File structure check completed"

